{"version":3,"sources":["components/GoodsList.js","App.js","index.js"],"names":["GoodsList","state","goodsList","props","selectValue","reverseList","setState","reverse","sortAlphabetically","sort","a","b","localeCompare","resetState","lengthSort","length","selectLength","value","filter","element","lengthLimit","Array","keys","className","type","onClick","this","onChange","target","map","num","key","good","React","Component","goodsFromServer","App","isButtonVisible","showGoodsFromServer","ReactDOM","render","document","getElementById"],"mappings":"4OAuFeA,E,4MAnFbC,MAAQ,CACNC,UAAU,YAAK,EAAKC,MAAMD,WAC1BE,YAAa,G,EAGfC,YAAc,WACZ,EAAKC,UAAS,gBAAGJ,EAAH,EAAGA,UAAH,MAAoB,CAChCA,UAAW,YAAIA,GAAWK,e,EAI9BC,mBAAqB,WACnB,EAAKF,UAAS,gBAAGJ,EAAH,EAAGA,UAAH,MAAoB,CAChCA,UAAW,YAAIA,GAAWO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,W,EAI7DE,WAAa,WACX,EAAKP,UAAS,iBAAO,CACnBJ,UAAU,YAAK,EAAKC,MAAMD,WAC1BE,YAAa,O,EAIjBU,WAAa,WACX,EAAKR,UAAS,gBAAGJ,EAAH,EAAGA,UAAH,MAAoB,CAChCA,UAAW,YAAIA,GAAWO,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEK,OAASJ,EAAEI,e,EAI3DC,aAAe,SAACC,GACd,EAAKX,SAAS,CACZF,YAAaa,EACbf,UAAW,EAAKC,MAAMD,UACnBgB,QAAO,SAAAC,GAAO,OAAIA,EAAQJ,QAAUE,Q,uDAIjC,IAAD,OACDG,EAAW,YAAOC,MAAM,IAAIC,QAElC,OACE,oCACE,yBAAKC,UAAU,WACb,4BAAQC,KAAK,SAASC,QAASC,KAAKrB,aAApC,WAGA,4BAAQmB,KAAK,SAASC,QAASC,KAAKlB,oBAApC,QAGA,4BAAQgB,KAAK,SAASC,QAASC,KAAKb,YAApC,SAGA,4BAAQW,KAAK,SAASC,QAASC,KAAKZ,YAApC,kBAGA,4BACEG,MAAOS,KAAKzB,MAAMG,YAClBuB,SAAU,SAAAR,GAAO,OAAI,EAAKH,aAAaG,EAAQS,OAAOX,SAErDG,EAAYS,KAAI,SAAAC,GAAG,OAClB,4BAAQC,IAAKD,GAAMA,EAAM,QAI/B,4BACGJ,KAAKzB,MAAMC,UAAU2B,KAAI,SAAAG,GAAI,OAC5B,wBAAID,IAAKC,GACNA,Y,GArESC,IAAMC,WCCxBC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAkCaC,E,4MA9BbnC,MAAQ,CACNoC,iBAAiB,G,EAGnBC,oBAAsB,WACpB,EAAKhC,SAAS,CACZ+B,iBAAiB,K,uDAIX,IACAA,EAAoBX,KAAKzB,MAAzBoC,gBAER,OACE,6BACGA,EAEG,4BACEb,KAAK,SACLC,QAASC,KAAKY,qBAFhB,SAOA,kBAAC,EAAD,CAAWpC,UAAWiC,S,GAzBhBF,IAAMC,WCbxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0767542e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass GoodsList extends React.Component {\n  state = {\n    goodsList: [...this.props.goodsList],\n    selectValue: 1,\n  }\n\n  reverseList = () => {\n    this.setState(({ goodsList }) => ({\n      goodsList: [...goodsList].reverse(),\n    }));\n  }\n\n  sortAlphabetically = () => {\n    this.setState(({ goodsList }) => ({\n      goodsList: [...goodsList].sort((a, b) => a.localeCompare(b)),\n    }));\n  }\n\n  resetState = () => {\n    this.setState(() => ({\n      goodsList: [...this.props.goodsList],\n      selectValue: 1,\n    }));\n  }\n\n  lengthSort = () => {\n    this.setState(({ goodsList }) => ({\n      goodsList: [...goodsList].sort((a, b) => (a.length - b.length)),\n    }));\n  }\n\n  selectLength = (value) => {\n    this.setState({\n      selectValue: value,\n      goodsList: this.props.goodsList\n        .filter(element => element.length >= value),\n    });\n  }\n\n  render() {\n    const lengthLimit = [...Array(10).keys()];\n\n    return (\n      <>\n        <div className=\"buttons\">\n          <button type=\"button\" onClick={this.reverseList}>\n            Reverse\n          </button>\n          <button type=\"button\" onClick={this.sortAlphabetically}>\n            Sort\n          </button>\n          <button type=\"button\" onClick={this.resetState}>\n            Reset\n          </button>\n          <button type=\"button\" onClick={this.lengthSort}>\n            Sort by Length\n          </button>\n          <select\n            value={this.state.selectValue}\n            onChange={element => this.selectLength(element.target.value)}\n          >\n            {lengthLimit.map(num => (\n              <option key={num}>{num + 1}</option>\n            ))}\n          </select>\n        </div>\n        <ul>\n          {this.state.goodsList.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goodsList: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n};\n\nexport default GoodsList;\n","import React from 'react';\nimport './App.css';\nimport GoodsList from './components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    isButtonVisible: true,\n  }\n\n  showGoodsFromServer = () => {\n    this.setState({\n      isButtonVisible: false,\n    });\n  }\n\n  render() {\n    const { isButtonVisible } = this.state;\n\n    return (\n      <div>\n        {isButtonVisible\n          ? (\n            <button\n              type=\"button\"\n              onClick={this.showGoodsFromServer}\n            >\n              Start\n            </button>\n          )\n          : <GoodsList goodsList={goodsFromServer} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}